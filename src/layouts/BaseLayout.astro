---
// Learn about using Astro layouts:
// https://docs.astro.build/en/core-concepts/layouts/

// Component Imports
import MainHead from "../components/MainHead.astro";
import Nav from "../components/Nav.astro";
import Footer from "../components/Footer.astro";

interface Props {
  title?: string | undefined;
  description?: string | undefined;
}

const { title, description } = Astro.props;
---

<html lang="es">
  <head>
    <MainHead title={title} description={description} />
  </head>
  <body>
    <div class="stack layout-wrapper"> <!-- Fondo de líneas de código -->
      <div class="stars">
        {Array.from({ length: 14 }).map((_, i) => (
          <div class="star" style={`--top-offset: ${Math.random() * 100}vh; --fall-duration: ${6 + Math.random() * 6}s;`}></div>
        ))}
      </div>
      <Nav class:list=/>
      <main class="layout-content">
        <slot />
      </main>
      <Footer />
    <!-- Incluir los estilos -->
    <style>

      .layout-wrapper {
        position: relative;  /* Necesario para que .code-lines se posicione correctamente */
        display: flex;
        flex-direction: column;
        min-height: 100vh;
      }

      .layout-content {
        flex: 1;
        position: relative;
        z-index: 1;  /* Asegura que el contenido esté encima del fondo */
      }

     /* Estrellas animadas */
.stars {
  position: fixed;
  top: 0;
  left: 0;
  width: 80%;
  height: 120%;
  transform: rotate(110deg);
  z-index: 1;
}

.star {
  --star-color: rgba(255, 0, 0, 0.8); /* estrellas rojas */
  --star-tail-length: 4em;
  --star-tail-height: 3px;
  --star-width: 1em;
  --fall-duration: 10s;

  position: absolute;
  top: calc(var(--top-offset, 50vh));
  left: 0;
  width: var(--star-tail-length);
  height: var(--star-tail-height);
  background: linear-gradient(45deg, var(--star-color), transparent);
  border-radius: 50%;
  filter: drop-shadow(0 0 6px var(--star-color));
  transform: translate3d(104em, 0, 0);
  animation: fall var(--fall-duration) linear infinite, tail-fade var(--fall-duration) ease-out infinite;
}

/* Extra efecto */
.star::before, .star::after {
  content: '';
  position: absolute;
  top: 0;
  left: calc(var(--star-width) / -2);
  width: var(--star-width);
  height: 100%;
  background: linear-gradient(45deg, transparent, var(--star-color), transparent);
  border-radius: inherit;
  animation: blink 2s linear infinite;
}

.star::before { transform: rotate(45deg); }
.star::after { transform: rotate(-45deg); }

@keyframes fall {
  to {
    transform: translate3d(-30em, 0, 0);
  }
}

@keyframes tail-fade {
  0%, 50% {
    width: var(--star-tail-length);
    opacity: 1;
  }
  70%, 80% {
    width: 0;
    opacity: 0.4;
  }
  100% {
    width: 0;
    opacity: 0;
  }
}

@keyframes blink {
  50% {
    opacity: 0.6;
  }
}


    </style>
  </body>
</html>
